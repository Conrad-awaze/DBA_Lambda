<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CloudWatchLogs</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.AddCWLLogGroupTagCmdlet">
            <summary>
            <important><para>
            The TagLogGroup operation is on the path to deprecation. We recommend that you use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html">TagResource</a>
            instead.
            </para></important><para>
            Adds or updates the specified tags for the specified log group.
            </para><para>
            To list the tags for a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>.
            To remove tags, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para><para>
            For more information about tags, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html#log-group-tagging">Tag
            Log Groups in Amazon CloudWatch Logs</a> in the <i>Amazon CloudWatch Logs User Guide</i>.
            </para><para>
            CloudWatch Logs doesnâ€™t support IAM policies that prevent users from assigning specified
            tags to log groups using the <code>aws:Resource/<i>key-name</i></code> or <code>aws:TagKeys</code>
            condition keys. For more information about using tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLLogGroupTagCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLLogGroupTagCmdlet.Tag">
            <summary>
            <para>
            <para>The key-value pairs to use for the tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLLogGroupTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.TagLogGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLLogGroupTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLLogGroupTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.AddCWLResourceTagCmdlet">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified CloudWatch Logs resource.
            Currently, the only CloudWatch Logs resources that can be tagged are log groups and
            destinations. 
            
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values.
            </para><para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para><para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key for the alarm, this tag is appended to the list of tags
            associated with the alarm. If you specify a tag key that is already associated with
            the alarm, the new tag value that you specify replaces the previous value for that
            tag.
            </para><para>
            You can associate as many as 50 tags with a CloudWatch Logs resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The ARN of the resource that you're adding tags to.</para><para>The ARN format of a log group is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:log-group:<i>log-group-name</i></code></para><para>The ARN format of a destination is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:destination:<i>destination-name</i></code></para><para>For more information about ARN format, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html">CloudWatch
            Logs resources and operations</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The list of key-value pairs to associate with the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.AddCWLResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLAccountPolicyCmdlet">
            <summary>
            Returns a list of all CloudWatch Logs account policies in the account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLAccountPolicyCmdlet.AccountIdentifier">
            <summary>
            <para>
            <para>If you are using an account that is set up as a monitoring account for CloudWatch
            unified cross-account observability, you can use this to specify the account ID of
            a source account. If you do, the operation returns the account policy for the specified
            account. Currently, you can specify only one account ID in this parameter.</para><para>If you omit this parameter, only the policy in the current account is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLAccountPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>Use this parameter to limit the returned policies to only the policy with the name
            that you specify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLAccountPolicyCmdlet.PolicyType">
            <summary>
            <para>
            <para>Use this parameter to limit the returned policies to only the policies that match
            the policy type that you specify. Currently, the only valid value is <code>DATA_PROTECTION_POLICY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLAccountPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountPolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLAccountPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyType parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLDataProtectionPolicyCmdlet">
            <summary>
            Returns information about a log group data protection policy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLDataProtectionPolicyCmdlet.LogGroupIdentifier">
            <summary>
            <para>
            <para>The name or ARN of the log group that contains the data protection policy that you
            want to see.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLDataProtectionPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLDataProtectionPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLDestinationCmdlet">
            <summary>
            Lists all your destinations. The results are ASCII-sorted by destination name.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLDestinationCmdlet.DestinationNamePrefix">
            <summary>
            <para>
            <para>The prefix to match. If you don't specify a value, no prefix filter is applied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLDestinationCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items returned. If you don't specify a value, the default maximum
            value of 50 items is used.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLDestinationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Destinations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DestinationNamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^DestinationNamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLDestinationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLExportTaskCmdlet">
            <summary>
            Lists the specified export tasks. You can list all your export tasks or filter the
            results based on task ID or task status.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLExportTaskCmdlet.StatusCode">
            <summary>
            <para>
            <para>The status code of the export task. Specifying a status code filters the results to
            zero or more export tasks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLExportTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>The ID of the export task. Specifying a task ID filters the results to one or zero
            export tasks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLExportTaskCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLExportTaskCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExportTasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeExportTasksResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeExportTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLExportTaskCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet">
            <summary>
            Lists log events from the specified log group. You can list all the log events or
            filter the results using a filter pattern, a time range, and the name of the log stream.
            
             
            <para>
            You must have the <code>logs:FilterLogEvents</code> permission to perform this operation.
            </para><para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para><para>
            By default, this operation returns as many log events as can fit in 1 MB (up to 10,000
            log events) or all the events found within the specified time range. If the results
            include a token, that means there are more log events available. You can get additional
            results by specifying the token in a subsequent call. This operation can return empty
            results while there are more log events available through the token.
            </para><para>
            The returned log events are sorted by event timestamp, the timestamp when the event
            was ingested by CloudWatch Logs, and the ID of the <code>PutLogEvents</code> request.
            </para><para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para><br/><br/>In the AWS.Tools.CloudWatchLogs module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.EndTime">
            <summary>
            <para>
            <para>The end of the time range, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>. Events with a timestamp later than this time are not
            returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.FilterPattern">
            <summary>
            <para>
            <para>The filter pattern to use. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html">Filter
            and Pattern Syntax</a>.</para><para>If not provided, all the events are matched.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.LogGroupIdentifier">
            <summary>
            <para>
            <para>Specify either the name or ARN of the log group to view log events from. If the log
            group is in a source account and you are using a monitoring account, you must use
            the log group ARN.</para><note><para> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group to search.</para><note><para> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.LogStreamNamePrefix">
            <summary>
            <para>
            <para>Filters the results to include only events from log streams that have names starting
            with this prefix.</para><para>If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>,
            but the value for <code>logStreamNamePrefix</code> does not match any log stream names
            specified in <code>logStreamNames</code>, the action returns an <code>InvalidParameterException</code>
            error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.LogStreamName">
            <summary>
            <para>
            <para>Filters the results to only logs from the log streams in this list.</para><para>If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>,
            the action returns an <code>InvalidParameterException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.StartTime">
            <summary>
            <para>
            <para>The start of the time range, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>. Events with a timestamp before this time are not returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.Unmask">
            <summary>
            <para>
            <para>Specify <code>true</code> to display the log event fields with all sensitive data
            unmasked and visible. The default is <code>false</code>.</para><para>To use this operation with this parameter, you must be signed into an account with
            the <code>logs:Unmask</code> permission.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.Interleaved">
            <summary>
            <para>
            <para>If the value is true, the operation attempts to provide responses that contain events
            from multiple log streams within the log group, interleaved in a single response.
            If the value is false, all the matched log events in the first log stream are searched
            first, then those in the next log stream, and so on.</para><para><b>Important</b> As of June 17, 2019, this parameter is ignored and the value is
            assumed to be true. The response from this operation always interleaves events from
            multiple log streams within a log group.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of events to return. The default is 10,000 events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of events to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.CloudWatchLogs module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.FilterLogEventsResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.FilterLogEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLFilteredLogEventCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet">
            <summary>
            Lists log events from the specified log stream. You can list all of the log events
            or filter using a time range.
            
             
            <para>
            By default, this operation returns as many log events as can fit in a response size
            of 1MB (up to 10,000 log events). You can get additional log events by specifying
            one of the tokens in a subsequent call. This operation can return empty results while
            there are more log events available through the token.
            </para><para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para><para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.EndTime">
            <summary>
            <para>
            <para>The end of the time range, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>. Events with a timestamp equal to or later than this time
            are not included.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.LogGroupIdentifier">
            <summary>
            <para>
            <para>Specify either the name or ARN of the log group to view events from. If the log group
            is in a source account and you are using a monitoring account, you must use the log
            group ARN.</para><note><para> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para><note><para> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.LogStreamName">
            <summary>
            <para>
            <para>The name of the log stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.StartFromHead">
            <summary>
            <para>
            <para>If the value is true, the earliest log events are returned first. If the value is
            false, the latest log events are returned first. The default value is false.</para><para>If you are using a previous <code>nextForwardToken</code> value as the <code>nextToken</code>
            in this operation, you must specify <code>true</code> for <code>startFromHead</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.StartTime">
            <summary>
            <para>
            <para>The start of the time range, expressed as the number of milliseconds after <code>Jan
            1, 1970 00:00:00 UTC</code>. Events with a timestamp equal to this time or later than
            this time are included. Events with a timestamp earlier than this time are not included.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.Unmask">
            <summary>
            <para>
            <para>Specify <code>true</code> to display the log event fields with all sensitive data
            unmasked and visible. The default is <code>false</code>.</para><para>To use this operation with this parameter, you must be signed into an account with
            the <code>logs:Unmask</code> permission.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of log events returned. If you don't specify a limit, the default
            is as many log events as can fit in a response size of 1 MB (up to 10,000 log events).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.GetLogEventsResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.GetLogEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogStreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogStreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            
             
            <para>
            CloudWatch Logs doesnâ€™t support IAM policies that control access to the <code>DescribeLogGroups</code>
            action by using the <code>aws:ResourceTag/<i>key-name</i></code> condition key. Other
            CloudWatch Logs actions do support the use of the <code>aws:ResourceTag/<i>key-name</i></code> condition key to control access. For more information about using tags to
            control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.
            </para><para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet.AccountIdentifier">
            <summary>
            <para>
            <para>When <code>includeLinkedAccounts</code> is set to <code>True</code>, use this parameter
            to specify the list of accounts to search. You can specify as many as 20 account IDs
            in the array. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet.IncludeLinkedAccount">
            <summary>
            <para>
            <para>If you are using a monitoring account, set this to <code>True</code> to have the operation
            return log groups in the accounts listed in <code>accountIdentifiers</code>.</para><para>If this parameter is set to <code>true</code> and <code>accountIdentifiers</code>
            contains a null value, the operation returns all log groups in the monitoring account
            and all log groups in all source accounts that are linked to the monitoring account.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet.LogGroupNamePattern">
            <summary>
            <para>
            <para>If you specify a string for this parameter, the operation returns only log groups
            that have names that match the string based on a case-sensitive substring search.
            For example, if you specify <code>Foo</code>, log groups named <code>FooBar</code>,
            <code>aws/Foo</code>, and <code>GroupFoo</code> would match, but <code>foo</code>,
            <code>F/o/o</code> and <code>Froo</code> would not match.</para><para>If you specify <code>logGroupNamePattern</code> in your request, then only <code>arn</code>,
            <code>creationTime</code>, and <code>logGroupName</code> are included in the response.
            </para><note><para><code>logGroupNamePattern</code> and <code>logGroupNamePrefix</code> are mutually
            exclusive. Only one of these parameters can be passed. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet.LogGroupNamePrefix">
            <summary>
            <para>
            <para>The prefix to match.</para><note><para><code>logGroupNamePrefix</code> and <code>logGroupNamePattern</code> are mutually
            exclusive. Only one of these parameters can be passed. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LogGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupNamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupNamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupFieldCmdlet">
            <summary>
            Returns a list of the fields that are included in log events in the specified log
            group. Includes the percentage of log events that contain each field. The search is
            limited to a time period that you specify.
            
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must specify one of these parameters, but you can't
            specify both. 
            </para><para>
            In the results, fields that start with <code>@</code> are fields generated by CloudWatch
            Logs. For example, <code>@timestamp</code> is the timestamp of each log event. For
            more information about the fields that are generated by CloudWatch logs, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html">Supported
            Logs and Discovered Fields</a>.
            </para><para>
            The response results are sorted by the frequency percentage, starting with the highest
            percentage.
            </para><para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupFieldCmdlet.LogGroupIdentifier">
            <summary>
            <para>
            <para>Specify either the name or ARN of the log group to view. If the log group is in a
            source account and you are using a monitoring account, you must specify the ARN.</para><note><para> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupFieldCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group to search.</para><note><para> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupFieldCmdlet.Time">
            <summary>
            <para>
            <para>The time to set as the center of the query. If you specify <code>time</code>, the
            8 minutes before and 8 minutes after this time are searched. If you omit <code>time</code>,
            the most recent 15 minutes up to the current time are searched.</para><para>The <code>time</code> value is specified as epoch time, which is the number of seconds
            since <code>January 1, 1970, 00:00:00 UTC</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupFieldCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LogGroupFields'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.GetLogGroupFieldsResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.GetLogGroupFieldsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupFieldCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupTagCmdlet">
            <summary>
            <important><para>
            The ListTagsLogGroup operation is on the path to deprecation. We recommend that you
            use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>
            instead.
            </para></important><para>
            Lists the tags for the specified log group.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupTagCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.ListTagsLogGroupResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.ListTagsLogGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogGroupTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogRecordCmdlet">
            <summary>
            Retrieves all of the fields and values of a single log event. All fields are retrieved,
            even if the original query that produced the <code>logRecordPointer</code> retrieved
            only a subset of fields. Fields are returned as field name/field value pairs.
            
             
            <para>
            The full unparsed log event is returned within <code>@message</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogRecordCmdlet.LogRecordPointer">
            <summary>
            <para>
            <para>The pointer corresponding to the log event record you want to retrieve. You get this
            from the response of a <code>GetQueryResults</code> operation. In that response, the
            value of the <code>@ptr</code> field for a log event is the value to use as <code>logRecordPointer</code>
            to retrieve that complete log event record.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogRecordCmdlet.Unmask">
            <summary>
            <para>
            <para>Specify <code>true</code> to display the log event fields with all sensitive data
            unmasked and visible. The default is <code>false</code>.</para><para>To use this operation with this parameter, you must be signed into an account with
            the <code>logs:Unmask</code> permission.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogRecordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LogRecord'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.GetLogRecordResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.GetLogRecordResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogRecordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogRecordPointer parameter.
            The -PassThru parameter is deprecated, use -Select '^LogRecordPointer' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet">
            <summary>
            Lists the log streams for the specified log group. You can list all the log streams
            or filter the results by prefix. You can also control how the results are ordered.
            
             
            <para>
            You can specify the log group to search by using either <code>logGroupIdentifier</code>
            or <code>logGroupName</code>. You must include one of these two parameters, but you
            can't include both. 
            </para><para>
            This operation has a limit of five transactions per second, after which transactions
            are throttled.
            </para><para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account and view data from the linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.Descending">
            <summary>
            <para>
            <para>If the value is true, results are returned in descending order. If the value is to
            false, results are returned in ascending order. The default value is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.LogGroupIdentifier">
            <summary>
            <para>
            <para>Specify either the name or ARN of the log group to view. If the log group is in a
            source account and you are using a monitoring account, you must use the log group
            ARN.</para><note><para> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para><note><para> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>,
            but not both. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.LogStreamNamePrefix">
            <summary>
            <para>
            <para>The prefix to match.</para><para>If <code>orderBy</code> is <code>LastEventTime</code>, you cannot specify this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.OrderBy">
            <summary>
            <para>
            <para>If the value is <code>LogStreamName</code>, the results are ordered by log stream
            name. If the value is <code>LastEventTime</code>, the results are ordered by the event
            time. The default value is <code>LogStreamName</code>.</para><para>If you order the results by event time, you cannot specify the <code>logStreamNamePrefix</code>
            parameter.</para><para><code>lastEventTimestamp</code> represents the time of the most recent log event
            in the log stream in CloudWatch Logs. This number is expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. <code>lastEventTimestamp</code> updates
            on an eventual consistency basis. It typically updates in less than an hour from ingestion,
            but in rare situations might take longer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LogStreams'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLLogStreamCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet">
            <summary>
            Lists the specified metric filters. You can list all of the metric filters or filter
            the results by log name, prefix, metric name, or metric namespace. The results are
            ASCII-sorted by filter name.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet.FilterNamePrefix">
            <summary>
            <para>
            <para>The prefix to match. CloudWatch Logs uses the value that you set here only if you
            also include the <code>logGroupName</code> parameter in your request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet.MetricName">
            <summary>
            <para>
            <para>Filters results to include only those with the specified metric name. If you include
            this parameter in your request, you must also include the <code>metricNamespace</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet.MetricNamespace">
            <summary>
            <para>
            <para>Filters results to include only those in the specified namespace. If you include this
            parameter in your request, you must also include the <code>metricName</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MetricFilters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLMetricFilterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryCmdlet">
            <summary>
            Returns a list of CloudWatch Logs Insights queries that are scheduled, running, or
            have been run recently in this account. You can request all queries or limit it to
            queries of a specific log group or queries with a certain status.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryCmdlet.LogGroupName">
            <summary>
            <para>
            <para>Limits the returned queries to only those for the specified log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryCmdlet.Status">
            <summary>
            <para>
            <para>Limits the returned queries to only those that have the specified status. Valid values
            are <code>Cancelled</code>, <code>Complete</code>, <code>Failed</code>, <code>Running</code>,
            and <code>Scheduled</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryCmdlet.MaxResult">
            <summary>
            <para>
            <para>Limits the number of returned queries to the specified number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryCmdlet.NextToken">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Queries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeQueriesResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeQueriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryDefinitionCmdlet">
            <summary>
            This operation returns a paginated list of your saved CloudWatch Logs Insights query
            definitions.
            
             
            <para>
            You can use the <code>queryDefinitionNamePrefix</code> parameter to limit the results
            to only the query definitions that have names that start with a certain string.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryDefinitionCmdlet.QueryDefinitionNamePrefix">
            <summary>
            <para>
            <para>Use this parameter to filter your results to only the query definitions that have
            names that start with the prefix you specify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryDefinitionCmdlet.MaxResult">
            <summary>
            <para>
            <para>Limits the number of returned query definitions to the specified number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryDefinitionCmdlet.NextToken">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QueryDefinitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryDefinitionNamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryDefinitionNamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryDefinitionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryResultCmdlet">
            <summary>
            Returns the results from the specified query.
            
             
            <para>
            Only the fields requested in the query are returned, along with a <code>@ptr</code>
            field, which is the identifier for the log record. You can use the value of <code>@ptr</code>
            in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogRecord.html">GetLogRecord</a>
            operation to get the full log record.
            </para><para><code>GetQueryResults</code> does not start running a query. To run a query, use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>.
            </para><para>
            If the value of the <code>Status</code> field in the output is <code>Running</code>,
            this operation returns only partial results. If you see a value of <code>Scheduled</code>
            or <code>Running</code> for the status, you can retry the operation later to see the
            final results. 
            </para><para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account to start queries in linked source accounts. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryResultCmdlet.QueryId">
            <summary>
            <para>
            <para>The ID number of the query.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryResultCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.GetQueryResultsResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.GetQueryResultsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLQueryResultCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryId parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLResourcePolicyCmdlet">
            <summary>
            Lists the resource policies in this account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLResourcePolicyCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of resource policies to be displayed with one call of this API.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLResourcePolicyCmdlet.NextToken">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourcePolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLResourcePolicyCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLResourceTagCmdlet">
            <summary>
            Displays the tags associated with a CloudWatch Logs resource. Currently, log groups
            and destinations support tagging.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The ARN of the resource that you want to view tags for.</para><para>The ARN format of a log group is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:log-group:<i>log-group-name</i></code></para><para>The ARN format of a destination is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:destination:<i>destination-name</i></code></para><para>For more information about ARN format, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html">CloudWatch
            Logs resources and operations</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.GetCWLSubscriptionFilterCmdlet">
            <summary>
            Lists the subscription filters for the specified log group. You can list all the subscription
            filters or filter the results by prefix. The results are ASCII-sorted by filter name.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLSubscriptionFilterCmdlet.FilterNamePrefix">
            <summary>
            <para>
            <para>The prefix to match. If you don't specify a value, no prefix filter is applied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLSubscriptionFilterCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLSubscriptionFilterCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLSubscriptionFilterCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLSubscriptionFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SubscriptionFilters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLSubscriptionFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.GetCWLSubscriptionFilterCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet">
            <summary>
            Creates an export task so that you can efficiently export data from a log group to
            an Amazon S3 bucket. When you perform a <code>CreateExportTask</code> operation, you
            must use credentials that have permission to write to the S3 bucket that you specify
            as the destination.
            
             
            <para>
            Exporting log data to S3 buckets that are encrypted by KMS is supported. Exporting
            log data to Amazon S3 buckets that have S3 Object Lock enabled with a retention period
            is also supported.
            </para><para>
            Exporting to S3 buckets that are encrypted with AES-256 is supported. 
            </para><para>
            This is an asynchronous call. If all the required information is provided, this operation
            initiates an export task and responds with the ID of the task. After the task has
            started, you can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeExportTasks.html">DescribeExportTasks</a>
            to get the status of the export task. Each account can only have one active (<code>RUNNING</code>
            or <code>PENDING</code>) export task at a time. To cancel an export task, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CancelExportTask.html">CancelExportTask</a>.
            </para><para>
            You can export logs from multiple log groups or multiple time ranges to the same S3
            bucket. To separate log data for each export task, specify a prefix to be used as
            the Amazon S3 key prefix for all exported objects.
            </para><note><para>
            Time-based sorting on chunks of log data inside an exported file is not guaranteed.
            You can sort the exported log field data by using Linux utilities.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.Destination">
            <summary>
            <para>
            <para>The name of S3 bucket for the exported log data. The bucket must be in the same Amazon
            Web Services Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.DestinationPrefix">
            <summary>
            <para>
            <para>The prefix used as the start of the key for every object exported. If you don't specify
            a value, the default is <code>exportedlogs</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.From">
            <summary>
            <para>
            <para>The start time of the range for the request, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. Events with a timestamp earlier than
            this time are not exported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.LogStreamNamePrefix">
            <summary>
            <para>
            <para>Export only log streams that match the provided prefix. If you don't specify a value,
            no prefix filter is applied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.TaskName">
            <summary>
            <para>
            <para>The name of the export task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.To">
            <summary>
            <para>
            <para>The end time of the range for the request, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. Events with a timestamp later than this
            time are not exported.</para><para>You must specify a time that is not earlier than when this log group was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.CreateExportTaskResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.CreateExportTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLExportTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogGroupCmdlet">
            <summary>
            Creates a log group with the specified name. You can create up to 20,000 log groups
            per account.
            
             
            <para>
            You must use the following guidelines when naming a log group:
            </para><ul><li><para>
            Log group names must be unique within a Region for an Amazon Web Services account.
            </para></li><li><para>
            Log group names can be between 1 and 512 characters long.
            </para></li><li><para>
            Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore),
            '-' (hyphen), '/' (forward slash), '.' (period), and '#' (number sign)
            </para></li></ul><para>
            When you create a log group, by default the log events in the log group do not expire.
            To set a retention policy so that events expire and are deleted after a specified
            time, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html">PutRetentionPolicy</a>.
            </para><para>
            If you associate an KMS key with the log group, ingested data is encrypted using the
            KMS key. This association is stored as long as the data encrypted with the KMS key
            is still within CloudWatch Logs. This enables CloudWatch Logs to decrypt this data
            whenever it is requested.
            </para><para>
            If you attempt to associate a KMS key with the log group but the KMS key does not
            exist or the KMS key is disabled, you receive an <code>InvalidParameterException</code>
            error. 
            </para><important><para>
            CloudWatch Logs supports only symmetric KMS keys. Do not associate an asymmetric KMS
            key with your log group. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogGroupCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. For
            more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms">Amazon
            Resource Names</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogGroupCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The key-value pairs to use for the tags.</para><para>You can grant users access to certain log groups while preventing them from accessing
            other log groups. To do so, tag your groups and use IAM policies that refer to those
            tags. To assign tags when you create a log group, you must have either the <code>logs:TagResource</code>
            or <code>logs:TagLogGroup</code> permission. For more information about tagging, see
            <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon
            Web Services resources</a>. For more information about using tags to control access,
            see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling
            access to Amazon Web Services resources using tags</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.CreateLogGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogStreamCmdlet">
            <summary>
            Creates a log stream for the specified log group. A log stream is a sequence of log
            events that originate from a single source, such as an application instance or a resource
            that is being monitored.
            
             
            <para>
            There is no limit on the number of log streams that you can create for a log group.
            There is a limit of 50 TPS on <code>CreateLogStream</code> operations, after which
            transactions are throttled.
            </para><para>
            You must use the following guidelines when naming a log stream:
            </para><ul><li><para>
            Log stream names must be unique within the log group.
            </para></li><li><para>
            Log stream names can be between 1 and 512 characters long.
            </para></li><li><para>
            Don't use ':' (colon) or '*' (asterisk) characters.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogStreamCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogStreamCmdlet.LogStreamName">
            <summary>
            <para>
            <para>The name of the log stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.CreateLogStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.NewCWLLogStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RegisterCWLKmsKeyCmdlet">
            <summary>
            Associates the specified KMS key with either one log group in the account, or with
            all stored CloudWatch Logs query insights results in the account.
            
             
            <para>
            When you use <code>AssociateKmsKey</code>, you specify either the <code>logGroupName</code>
            parameter or the <code>resourceIdentifier</code> parameter. You can't specify both
            of those parameters in the same operation.
            </para><ul><li><para>
            Specify the <code>logGroupName</code> parameter to cause all log events stored in
            the log group to be encrypted with that key. Only the log events ingested after the
            key is associated are encrypted with that key.
            </para><para>
            Associating a KMS key with a log group overrides any existing associations between
            the log group and a KMS key. After a KMS key is associated with a log group, all newly
            ingested data for the log group is encrypted using the KMS key. This association is
            stored as long as the data encrypted with the KMS key is still within CloudWatch Logs.
            This enables CloudWatch Logs to decrypt this data whenever it is requested.
            </para><para>
            Associating a key with a log group does not cause the results of queries of that log
            group to be encrypted with that key. To have query results encrypted with a KMS key,
            you must use an <code>AssociateKmsKey</code> operation with the <code>resourceIdentifier</code>
            parameter that specifies a <code>query-result</code> resource. 
            </para></li><li><para>
            Specify the <code>resourceIdentifier</code> parameter with a <code>query-result</code>
            resource, to use that key to encrypt the stored results of all future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in the account. The response from a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            operation will still return the query results in plain text.
            </para><para>
            Even if you have not associated a key with your query results, the query results are
            encrypted when stored, using the default CloudWatch Logs method.
            </para><para>
            If you run a query from a monitoring account that queries logs in a source account,
            the query results key from the monitoring account, if any, is used.
            </para></li></ul><important><para>
            If you delete the key that is used to encrypt log events or log group query results,
            then all the associated stored log events or query results that were encrypted with
            that key will be unencryptable and unusable.
            </para></important><note><para>
            CloudWatch Logs supports only symmetric KMS keys. Do not use an associate an asymmetric
            KMS key with your log group or query results. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.
            </para></note><para>
            It can take up to 5 minutes for this operation to take effect.
            </para><para>
            If you attempt to associate a KMS key with a log group but the KMS key does not exist
            or the KMS key is disabled, you receive an <code>InvalidParameterException</code>
            error. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RegisterCWLKmsKeyCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. This
            must be a symmetric KMS key. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms">Amazon
            Resource Names</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
            Symmetric and Asymmetric Keys</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RegisterCWLKmsKeyCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para><para>In your <code>AssociateKmsKey</code> operation, you must specify either the <code>resourceIdentifier</code>
            parameter or the <code>logGroup</code> parameter, but you can't specify both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RegisterCWLKmsKeyCmdlet.ResourceIdentifier">
            <summary>
            <para>
            <para>Specifies the target for this operation. You must specify one of the following:</para><ul><li><para>Specify the following ARN to have future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            operations in this account encrypt the results with the specified KMS key. Replace
            <i>REGION</i> and <i>ACCOUNT_ID</i> with your Region and account ID.</para><para><code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:query-result:*</code></para></li><li><para>Specify the ARN of a log group to have CloudWatch Logs use the KMS key to encrypt
            log events that are ingested and stored by that log group. The log group ARN must
            be in the following format. Replace <i>REGION</i> and <i>ACCOUNT_ID</i> with your
            Region and account ID.</para><para><code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:log-group:<i>LOG_GROUP_NAME</i></code></para></li></ul><para>In your <code>AssociateKmsKey</code> operation, you must specify either the <code>resourceIdentifier</code>
            parameter or the <code>logGroup</code> parameter, but you can't specify both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RegisterCWLKmsKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.AssociateKmsKeyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RegisterCWLKmsKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KmsKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KmsKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RegisterCWLKmsKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLAccountPolicyCmdlet">
            <summary>
            Deletes a CloudWatch Logs account policy.
            
             
            <para>
            To use this operation, you must be signed on with the <code>logs:DeleteDataProtectionPolicy</code>
            and <code>logs:DeleteAccountPolicy</code> permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLAccountPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLAccountPolicyCmdlet.PolicyType">
            <summary>
            <para>
            <para>The type of policy to delete. Currently, the only valid value is <code>DATA_PROTECTION_POLICY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLAccountPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteAccountPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLAccountPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDataProtectionPolicyCmdlet">
            <summary>
            Deletes the data protection policy from the specified log group. 
            
             
            <para>
            For more information about data protection policies, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html">PutDataProtectionPolicy</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDataProtectionPolicyCmdlet.LogGroupIdentifier">
            <summary>
            <para>
            <para>The name or ARN of the log group that you want to delete the data protection policy
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDataProtectionPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteDataProtectionPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDataProtectionPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDataProtectionPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDestinationCmdlet">
            <summary>
            Deletes the specified destination, and eventually disables all the subscription filters
            that publish to it. This operation does not delete the physical resource encapsulated
            by the destination.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDestinationCmdlet.DestinationName">
            <summary>
            <para>
            <para>The name of the destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DestinationName parameter.
            The -PassThru parameter is deprecated, use -Select '^DestinationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupCmdlet">
            <summary>
            Deletes the specified log group and permanently deletes all the archived log events
            associated with the log group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteLogGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupTagCmdlet">
            <summary>
            <important><para>
            The UntagLogGroup operation is on the path to deprecation. We recommend that you use
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html">UntagResource</a>
            instead.
            </para></important><para>
            Removes the specified tags from the specified log group.
            </para><para>
            To list the tags for a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html">ListTagsForResource</a>.
            To add tags, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html">TagResource</a>.
            </para><para>
            CloudWatch Logs doesnâ€™t support IAM policies that prevent users from assigning specified
            tags to log groups using the <code>aws:Resource/<i>key-name</i></code> or <code>aws:TagKeys</code>
            condition keys. 
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupTagCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tag keys. The corresponding tags are removed from the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.UntagLogGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogGroupTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogStreamCmdlet">
            <summary>
            Deletes the specified log stream and permanently deletes all the archived log events
            associated with the log stream.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogStreamCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogStreamCmdlet.LogStreamName">
            <summary>
            <para>
            <para>The name of the log stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogStreamCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteLogStreamResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogStreamCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogStreamName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogStreamName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLLogStreamCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLMetricFilterCmdlet">
            <summary>
            Deletes the specified metric filter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLMetricFilterCmdlet.FilterName">
            <summary>
            <para>
            <para>The name of the metric filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLMetricFilterCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLMetricFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteMetricFilterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLMetricFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FilterName parameter.
            The -PassThru parameter is deprecated, use -Select '^FilterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLMetricFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLQueryDefinitionCmdlet">
            <summary>
            Deletes a saved CloudWatch Logs Insights query definition. A query definition contains
            details about a saved CloudWatch Logs Insights query.
            
             
            <para>
            Each <code>DeleteQueryDefinition</code> operation can delete one query definition.
            </para><para>
            You must have the <code>logs:DeleteQueryDefinition</code> permission to be able to
            perform this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLQueryDefinitionCmdlet.QueryDefinitionId">
            <summary>
            <para>
            <para>The ID of the query definition that you want to delete. You can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html">DescribeQueryDefinitions</a>
            to retrieve the IDs of your saved query definitions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLQueryDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Success'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLQueryDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryDefinitionId parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryDefinitionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLQueryDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourcePolicyCmdlet">
            <summary>
            Deletes a resource policy from this account. This revokes the access of the identities
            in that policy to put log events to this account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourcePolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy to be revoked. This parameter is required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteResourcePolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourcePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourcePolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourceTagCmdlet">
            <summary>
            Removes one or more tags from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The ARN of the CloudWatch Logs resource that you're removing tags from.</para><para>The ARN format of a log group is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:log-group:<i>log-group-name</i></code></para><para>The ARN format of a destination is <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:destination:<i>destination-name</i></code></para><para>For more information about ARN format, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html">CloudWatch
            Logs resources and operations</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The list of tag keys to remove from the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLRetentionPolicyCmdlet">
            <summary>
            Deletes the specified retention policy.
            
             
            <para>
            Log events do not expire if they belong to log groups without a retention policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLRetentionPolicyCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLRetentionPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLRetentionPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLRetentionPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLSubscriptionFilterCmdlet">
            <summary>
            Deletes the specified subscription filter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLSubscriptionFilterCmdlet.FilterName">
            <summary>
            <para>
            <para>The name of the subscription filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLSubscriptionFilterCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLSubscriptionFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLSubscriptionFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FilterName parameter.
            The -PassThru parameter is deprecated, use -Select '^FilterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.RemoveCWLSubscriptionFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet">
            <summary>
            Schedules a query of a log group using CloudWatch Logs Insights. You specify the log
            group and time range to query and the query string to use.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.
            </para><para>
            After you run a query using <code>StartQuery</code>, the query results are stored
            by CloudWatch Logs. You can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html">GetQueryResults</a>
            to retrieve the results of a query, using the <code>queryId</code> that <code>StartQuery</code>
            returns. 
            </para><para>
            If you have associated a KMS key with the query results in this account, then <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            uses that key to encrypt the results when it stores them. If no key is associated
            with query results, the query results are encrypted with the default CloudWatch Logs
            encryption method.
            </para><para>
            Queries time out after 60 minutes of runtime. If your queries are timing out, reduce
            the time range being searched or partition your query into a number of queries.
            </para><para>
            If you are using CloudWatch cross-account observability, you can use this operation
            in a monitoring account to start a query in a linked source account. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch
            cross-account observability</a>. For a cross-account <code>StartQuery</code> operation,
            the query definition must be defined in the monitoring account.
            </para><para>
            You can have up to 30 concurrent CloudWatch Logs insights queries, including queries
            that have been added to dashboards. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.EndTime">
            <summary>
            <para>
            <para>The end of the time range to query. The range is inclusive, so the specified end time
            is included in the query. Specified as epoch time, the number of seconds since <code>January
            1, 1970, 00:00:00 UTC</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.LogGroupIdentifier">
            <summary>
            <para>
            <para>The list of log groups to query. You can include up to 50 log groups.</para><para>You can specify them by the log group name or ARN. If a log group that you're querying
            is in a source account and you're using a monitoring account, you must specify the
            ARN of the log group here. The query definition must also be defined in the monitoring
            account.</para><para>If you specify an ARN, the ARN can't end with an asterisk (*).</para><para>A <code>StartQuery</code> operation must include exactly one of the following parameters:
            <code>logGroupName</code>, <code>logGroupNames</code>, or <code>logGroupIdentifiers</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The log group on which to perform the query.</para><note><para>A <code>StartQuery</code> operation must include exactly one of the following parameters:
            <code>logGroupName</code>, <code>logGroupNames</code>, or <code>logGroupIdentifiers</code>.
            </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.LogGroupNameList">
            <summary>
            <para>
            <para>The list of log groups to be queried. You can include up to 50 log groups.</para><note><para>A <code>StartQuery</code> operation must include exactly one of the following parameters:
            <code>logGroupName</code>, <code>logGroupNames</code>, or <code>logGroupIdentifiers</code>.
            </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.QueryString">
            <summary>
            <para>
            <para>The query string to use. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.StartTime">
            <summary>
            <para>
            <para>The beginning of the time range to query. The range is inclusive, so the specified
            start time is included in the query. Specified as epoch time, the number of seconds
            since <code>January 1, 1970, 00:00:00 UTC</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of log events to return in the query. If the query string uses
            the <code>fields</code> command, only the specified fields and their values are returned.
            The default is 1000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QueryId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.StartQueryResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.StartQueryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryString parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StartCWLQueryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.StopCWLExportTaskCmdlet">
            <summary>
            Cancels the specified export task.
            
             
            <para>
            The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StopCWLExportTaskCmdlet.TaskId">
            <summary>
            <para>
            <para>The ID of the export task.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StopCWLExportTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.CancelExportTaskResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StopCWLExportTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StopCWLExportTaskCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.StopCWLQueryCmdlet">
            <summary>
            Stops a CloudWatch Logs Insights query that is in progress. If the query has already
            ended, the operation returns an error indicating that the specified query is not running.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StopCWLQueryCmdlet.QueryId">
            <summary>
            <para>
            <para>The ID number of the query to stop. To find this ID number, use <code>DescribeQueries</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StopCWLQueryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Success'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.StopQueryResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.StopQueryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StopCWLQueryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the QueryId parameter.
            The -PassThru parameter is deprecated, use -Select '^QueryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.StopCWLQueryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.TestCWLMetricFilterCmdlet">
            <summary>
            Tests the filter pattern of a metric filter against a sample of log event messages.
            You can use this operation to validate the correctness of a metric filter pattern.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.TestCWLMetricFilterCmdlet.FilterPattern">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.TestCWLMetricFilterCmdlet.LogEventMessage">
            <summary>
            <para>
            <para>The log event messages to test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.TestCWLMetricFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Matches'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.TestMetricFilterResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.TestMetricFilterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.TestCWLMetricFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FilterPattern parameter.
            The -PassThru parameter is deprecated, use -Select '^FilterPattern' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.UnregisterCWLKmsKeyCmdlet">
            <summary>
            Disassociates the specified KMS key from the specified log group or from all CloudWatch
            Logs Insights query results in the account.
            
             
            <para>
            When you use <code>DisassociateKmsKey</code>, you specify either the <code>logGroupName</code>
            parameter or the <code>resourceIdentifier</code> parameter. You can't specify both
            of those parameters in the same operation.
            </para><ul><li><para>
            Specify the <code>logGroupName</code> parameter to stop using the KMS key to encrypt
            future log events ingested and stored in the log group. Instead, they will be encrypted
            with the default CloudWatch Logs method. The log events that were ingested while the
            key was associated with the log group are still encrypted with that key. Therefore,
            CloudWatch Logs will need permissions for the key whenever that data is accessed.
            </para></li><li><para>
            Specify the <code>resourceIdentifier</code> parameter with the <code>query-result</code>
            resource to stop using the KMS key to encrypt the results of all future <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in the account. They will instead be encrypted with the default CloudWatch
            Logs method. The results from queries that ran while the key was associated with the
            account are still encrypted with that key. Therefore, CloudWatch Logs will need permissions
            for the key whenever that data is accessed.
            </para></li></ul><para>
            It can take up to 5 minutes for this operation to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.UnregisterCWLKmsKeyCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para><para>In your <code>DisassociateKmsKey</code> operation, you must specify either the <code>resourceIdentifier</code>
            parameter or the <code>logGroup</code> parameter, but you can't specify both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.UnregisterCWLKmsKeyCmdlet.ResourceIdentifier">
            <summary>
            <para>
            <para>Specifies the target for this operation. You must specify one of the following:</para><ul><li><para>Specify the ARN of a log group to stop having CloudWatch Logs use the KMS key to encrypt
            log events that are ingested and stored by that log group. After you run this operation,
            CloudWatch Logs encrypts ingested log events with the default CloudWatch Logs method.
            The log group ARN must be in the following format. Replace <i>REGION</i> and <i>ACCOUNT_ID</i>
            with your Region and account ID.</para><para><code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:log-group:<i>LOG_GROUP_NAME</i></code></para></li><li><para>Specify the following ARN to stop using this key to encrypt the results of future
            <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html">StartQuery</a>
            operations in this account. Replace <i>REGION</i> and <i>ACCOUNT_ID</i> with your
            Region and account ID.</para><para><code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:query-result:*</code></para></li></ul><para>In your <code>DisssociateKmsKey</code> operation, you must specify either the <code>resourceIdentifier</code>
            parameter or the <code>logGroup</code> parameter, but you can't specify both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.UnregisterCWLKmsKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.DisassociateKmsKeyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.UnregisterCWLKmsKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.UnregisterCWLKmsKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLAccountPolicyCmdlet">
            <summary>
            Creates an account-level data protection policy that applies to all log groups in
            the account. A data protection policy can help safeguard sensitive data that's ingested
            by your log groups by auditing and masking the sensitive log data. Each account can
            have only one account-level policy.
            
             <important><para>
            Sensitive data is detected and masked when it is ingested into a log group. When you
            set a data protection policy, log events ingested into the log groups before that
            time are not masked.
            </para></important><para>
            If you use <code>PutAccountPolicy</code> to create a data protection policy for your
            whole account, it applies to both existing log groups and all log groups that are
            created later in this account. The account policy is applied to existing log groups
            with eventual consistency. It might take up to 5 minutes before sensitive data in
            existing log groups begins to be masked.
            </para><para>
            By default, when a user views a log event that includes masked data, the sensitive
            data is replaced by asterisks. A user who has the <code>logs:Unmask</code> permission
            can use a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">GetLogEvents</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html">FilterLogEvents</a>
            operation with the <code>unmask</code> parameter set to <code>true</code> to view
            the unmasked log events. Users with the <code>logs:Unmask</code> can also view unmasked
            data in the CloudWatch Logs console by running a CloudWatch Logs Insights query with
            the <code>unmask</code> query command.
            </para><para>
            For more information, including a list of types of data that can be audited and masked,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Protect
            sensitive log data with masking</a>.
            </para><para>
            To use the <code>PutAccountPolicy</code> operation, you must be signed on with the
            <code>logs:PutDataProtectionPolicy</code> and <code>logs:PutAccountPolicy</code> permissions.
            </para><para>
            The <code>PutAccountPolicy</code> operation applies to all log groups in the account.
            You can also use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html">PutDataProtectionPolicy</a>
            to create a data protection policy that applies to just one log group. If a log group
            has its own data protection policy and the account also has an account-level data
            protection policy, then the two policies are cumulative. Any sensitive term specified
            in either policy is masked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLAccountPolicyCmdlet.PolicyDocument">
            <summary>
            <para>
            <para>Specify the data protection policy, in JSON.</para><para>This policy must include two JSON blocks:</para><ul><li><para>The first block must include both a <code>DataIdentifer</code> array and an <code>Operation</code>
            property with an <code>Audit</code> action. The <code>DataIdentifer</code> array lists
            the types of sensitive data that you want to mask. For more information about the
            available options, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-types.html">Types
            of data that you can mask</a>.</para><para>The <code>Operation</code> property with an <code>Audit</code> action is required
            to find the sensitive data terms. This <code>Audit</code> action must contain a <code>FindingsDestination</code>
            object. You can optionally use that <code>FindingsDestination</code> object to list
            one or more destinations to send audit findings to. If you specify destinations such
            as log groups, Kinesis Data Firehose streams, and S3 buckets, they must already exist.</para></li><li><para>The second block must include both a <code>DataIdentifer</code> array and an <code>Operation</code>
            property with an <code>Deidentify</code> action. The <code>DataIdentifer</code> array
            must exactly match the <code>DataIdentifer</code> array in the first block of the
            policy.</para><para>The <code>Operation</code> property with the <code>Deidentify</code> action is what
            actually masks the data, and it must contain the <code> "MaskConfig": {}</code> object.
            The <code> "MaskConfig": {}</code> object must be empty.</para></li></ul><para>For an example data protection policy, see the <b>Examples</b> section on this page.</para><important><para>The contents of the two <code>DataIdentifer</code> arrays must match exactly.</para></important><para>In addition to the two JSON blocks, the <code>policyDocument</code> can also include
            <code>Name</code>, <code>Description</code>, and <code>Version</code> fields. The
            <code>Name</code> is different than the operation's <code>policyName</code> parameter,
            and is used as a dimension when CloudWatch Logs reports audit findings metrics to
            CloudWatch.</para><para>The JSON specified in <code>policyDocument</code> can be up to 30,720 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLAccountPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>A name for the policy. This must be unique within the account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLAccountPolicyCmdlet.PolicyType">
            <summary>
            <para>
            <para>Currently the only valid value for this parameter is <code>DATA_PROTECTION_POLICY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLAccountPolicyCmdlet.Scope">
            <summary>
            <para>
            <para>Currently the only valid value for this parameter is <code>ALL</code>, which specifies
            that the data protection policy applies to all log groups in the account. If you omit
            this parameter, the default of <code>ALL</code> is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLAccountPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountPolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutAccountPolicyResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.PutAccountPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLAccountPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDataProtectionPolicyCmdlet">
            <summary>
            Creates a data protection policy for the specified log group. A data protection policy
            can help safeguard sensitive data that's ingested by the log group by auditing and
            masking the sensitive log data.
            
             <important><para>
            Sensitive data is detected and masked when it is ingested into the log group. When
            you set a data protection policy, log events ingested into the log group before that
            time are not masked.
            </para></important><para>
            By default, when a user views a log event that includes masked data, the sensitive
            data is replaced by asterisks. A user who has the <code>logs:Unmask</code> permission
            can use a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">GetLogEvents</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html">FilterLogEvents</a>
            operation with the <code>unmask</code> parameter set to <code>true</code> to view
            the unmasked log events. Users with the <code>logs:Unmask</code> can also view unmasked
            data in the CloudWatch Logs console by running a CloudWatch Logs Insights query with
            the <code>unmask</code> query command.
            </para><para>
            For more information, including a list of types of data that can be audited and masked,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html">Protect
            sensitive log data with masking</a>.
            </para><para>
            The <code>PutDataProtectionPolicy</code> operation applies to only the specified log
            group. You can also use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutAccountPolicy.html">PutAccountPolicy</a>
            to create an account-level data protection policy that applies to all log groups in
            the account, including both existing log groups and log groups that are created level.
            If a log group has its own data protection policy and the account also has an account-level
            data protection policy, then the two policies are cumulative. Any sensitive term specified
            in either policy is masked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDataProtectionPolicyCmdlet.LogGroupIdentifier">
            <summary>
            <para>
            <para>Specify either the log group name or log group ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDataProtectionPolicyCmdlet.PolicyDocument">
            <summary>
            <para>
            <para>Specify the data protection policy, in JSON.</para><para>This policy must include two JSON blocks:</para><ul><li><para>The first block must include both a <code>DataIdentifer</code> array and an <code>Operation</code>
            property with an <code>Audit</code> action. The <code>DataIdentifer</code> array lists
            the types of sensitive data that you want to mask. For more information about the
            available options, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-types.html">Types
            of data that you can mask</a>.</para><para>The <code>Operation</code> property with an <code>Audit</code> action is required
            to find the sensitive data terms. This <code>Audit</code> action must contain a <code>FindingsDestination</code>
            object. You can optionally use that <code>FindingsDestination</code> object to list
            one or more destinations to send audit findings to. If you specify destinations such
            as log groups, Kinesis Data Firehose streams, and S3 buckets, they must already exist.</para></li><li><para>The second block must include both a <code>DataIdentifer</code> array and an <code>Operation</code>
            property with an <code>Deidentify</code> action. The <code>DataIdentifer</code> array
            must exactly match the <code>DataIdentifer</code> array in the first block of the
            policy.</para><para>The <code>Operation</code> property with the <code>Deidentify</code> action is what
            actually masks the data, and it must contain the <code> "MaskConfig": {}</code> object.
            The <code> "MaskConfig": {}</code> object must be empty.</para></li></ul><para>For an example data protection policy, see the <b>Examples</b> section on this page.</para><important><para>The contents of the two <code>DataIdentifer</code> arrays must match exactly.</para></important><para>In addition to the two JSON blocks, the <code>policyDocument</code> can also include
            <code>Name</code>, <code>Description</code>, and <code>Version</code> fields. The
            <code>Name</code> is used as a dimension when CloudWatch Logs reports audit findings
            metrics to CloudWatch.</para><para>The JSON specified in <code>policyDocument</code> can be up to 30,720 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDataProtectionPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDataProtectionPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupIdentifier parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupIdentifier' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDataProtectionPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationCmdlet">
            <summary>
            Creates or updates a destination. This operation is used only to create destinations
            for cross-account subscriptions.
            
             
            <para>
            A destination encapsulates a physical resource (such as an Amazon Kinesis stream).
            With a destination, you can subscribe to a real-time stream of log events for a different
            account, ingested using <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>.
            </para><para>
            Through an access policy, a destination controls what is written to it. By default,
            <code>PutDestination</code> does not set any access policy with the destination, which
            means a cross-account user cannot call <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutSubscriptionFilter.html">PutSubscriptionFilter</a>
            against this destination. To enable this, the destination owner must call <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html">PutDestinationPolicy</a>
            after <code>PutDestination</code>.
            </para><para>
            To perform a <code>PutDestination</code> operation, you must also have the <code>iam:PassRole</code>
            permission.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationCmdlet.DestinationName">
            <summary>
            <para>
            <para>A name for the destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationCmdlet.RoleArn">
            <summary>
            <para>
            <para>The ARN of an IAM role that grants CloudWatch Logs permissions to call the Amazon
            Kinesis <code>PutRecord</code> operation on the destination stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationCmdlet.Tag">
            <summary>
            <para>
            <para>An optional list of key-value pairs to associate with the resource.</para><para>For more information about tagging, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationCmdlet.TargetArn">
            <summary>
            <para>
            <para>The ARN of an Amazon Kinesis stream to which to deliver matching log events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Destination'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutDestinationResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.PutDestinationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DestinationName parameter.
            The -PassThru parameter is deprecated, use -Select '^DestinationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationPolicyCmdlet">
            <summary>
            Creates or updates an access policy associated with an existing destination. An access
            policy is an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html">IAM
            policy document</a> that is used to authorize claims to register a subscription filter
            against a given destination.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationPolicyCmdlet.AccessPolicy">
            <summary>
            <para>
            <para>An IAM policy document that authorizes cross-account users to deliver their log events
            to the associated destination. This can be up to 5120 bytes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationPolicyCmdlet.DestinationName">
            <summary>
            <para>
            <para>A name for an existing destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationPolicyCmdlet.ForceUpdate">
            <summary>
            <para>
            <para>Specify true if you are updating an existing destination policy to grant permission
            to an organization ID instead of granting permission to individual Amazon Web Services
            accounts. Before you update a destination policy this way, you must first update the
            subscription filters in the accounts that send logs to this destination. If you do
            not, the subscription filters might stop working. By specifying <code>true</code>
            for <code>forceUpdate</code>, you are affirming that you have already updated the
            subscription filters. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Cross-Account-Log_Subscription-Update.html">
            Updating an existing cross-account subscription</a></para><para>If you omit this parameter, the default of <code>false</code> is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutDestinationPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DestinationName parameter.
            The -PassThru parameter is deprecated, use -Select '^DestinationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLDestinationPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLLogEventCmdlet">
            <summary>
            Uploads a batch of log events to the specified log stream.
            
             <important><para>
            The sequence token is now ignored in <code>PutLogEvents</code> actions. <code>PutLogEvents</code>
            actions are always accepted and never return <code>InvalidSequenceTokenException</code>
            or <code>DataAlreadyAcceptedException</code> even if the sequence token is not valid.
            You can use parallel <code>PutLogEvents</code> actions on the same log stream. 
            </para></important><para>
            The batch of events must satisfy the following constraints:
            </para><ul><li><para>
            The maximum batch size is 1,048,576 bytes. This size is calculated as the sum of all
            event messages in UTF-8, plus 26 bytes for each log event.
            </para></li><li><para>
            None of the log events in the batch can be more than 2 hours in the future.
            </para></li><li><para>
            None of the log events in the batch can be more than 14 days in the past. Also, none
            of the log events can be from earlier than the retention period of the log group.
            </para></li><li><para>
            The log events in the batch must be in chronological order by their timestamp. The
            timestamp is the time that the event occurred, expressed as the number of milliseconds
            after <code>Jan 1, 1970 00:00:00 UTC</code>. (In Amazon Web Services Tools for PowerShell
            and the Amazon Web Services SDK for .NET, the timestamp is specified in .NET format:
            <code>yyyy-mm-ddThh:mm:ss</code>. For example, <code>2017-09-15T13:45:30</code>.)
            
            </para></li><li><para>
            A batch of log events in a single request cannot span more than 24 hours. Otherwise,
            the operation fails.
            </para></li><li><para>
            Each log event can be no larger than 256 KB.
            </para></li><li><para>
            The maximum number of log events in a batch is 10,000.
            </para></li><li><important><para>
            The quota of five requests per second per log stream has been removed. Instead, <code>PutLogEvents</code>
            actions are throttled based on a per-second per-account quota. You can request an
            increase to the per-second throttling quota by using the Service Quotas service.
            </para></important></li></ul><para>
            If a call to <code>PutLogEvents</code> returns "UnrecognizedClientException" the most
            likely cause is a non-valid Amazon Web Services access key ID or secret key. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLLogEventCmdlet.LogEvent">
            <summary>
            <para>
            <para>The log events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLLogEventCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLLogEventCmdlet.LogStreamName">
            <summary>
            <para>
            <para>The name of the log stream.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLLogEventCmdlet.SequenceToken">
            <summary>
            <para>
            <para>The sequence token obtained from the response of the previous <code>PutLogEvents</code>
            call.</para><important><para>The <code>sequenceToken</code> parameter is now ignored in <code>PutLogEvents</code>
            actions. <code>PutLogEvents</code> actions are now accepted and never return <code>InvalidSequenceTokenException</code>
            or <code>DataAlreadyAcceptedException</code> even if the sequence token is not valid.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLLogEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NextSequenceToken'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutLogEventsResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.PutLogEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLLogEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SequenceToken parameter.
            The -PassThru parameter is deprecated, use -Select '^SequenceToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLLogEventCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLMetricFilterCmdlet">
            <summary>
            Creates or updates a metric filter and associates it with the specified log group.
            With metric filters, you can configure rules to extract metric data from log events
            ingested through <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>.
            
             
            <para>
            The maximum number of metric filters that can be associated with a log group is 100.
            </para><para>
            When you create a metric filter, you can also optionally assign a unit and dimensions
            to the metric that is created.
            </para><important><para>
            Metrics extracted from log events are charged as custom metrics. To prevent unexpected
            high charges, do not specify high-cardinality fields such as <code>IPAddress</code>
            or <code>requestID</code> as dimensions. Each different value found for a dimension
            is treated as a separate metric and accrues charges as a separate custom metric. 
            </para><para>
            CloudWatch Logs disables a metric filter if it generates 1,000 different name/value
            pairs for your specified dimensions within a certain amount of time. This helps to
            prevent accidental high charges.
            </para><para>
            You can also set up a billing alarm to alert you if your charges are higher than expected.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html">
            Creating a Billing Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
            
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLMetricFilterCmdlet.FilterName">
            <summary>
            <para>
            <para>A name for the metric filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLMetricFilterCmdlet.FilterPattern">
            <summary>
            <para>
            <para>A filter pattern for extracting metric data out of ingested log events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLMetricFilterCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLMetricFilterCmdlet.MetricTransformation">
            <summary>
            <para>
            <para>A collection of information that defines how metric data gets emitted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLMetricFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutMetricFilterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLMetricFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLMetricFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLQueryDefinitionCmdlet">
            <summary>
            Creates or updates a query definition for CloudWatch Logs Insights. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html">Analyzing
            Log Data with CloudWatch Logs Insights</a>.
            
             
            <para>
            To update a query definition, specify its <code>queryDefinitionId</code> in your request.
            The values of <code>name</code>, <code>queryString</code>, and <code>logGroupNames</code>
            are changed to the values that you specify in your update operation. No current values
            are retained from the current query definition. For example, imagine updating a current
            query definition that includes log groups. If you don't specify the <code>logGroupNames</code>
            parameter in your update operation, the query definition changes to contain no log
            groups.
            </para><para>
            You must have the <code>logs:PutQueryDefinition</code> permission to be able to perform
            this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLQueryDefinitionCmdlet.LogGroupName">
            <summary>
            <para>
            <para>Use this parameter to include specific log groups as part of your query definition.</para><para>If you are updating a query definition and you omit this parameter, then the updated
            definition will contain no log groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLQueryDefinitionCmdlet.Name">
            <summary>
            <para>
            <para>A name for the query definition. If you are saving numerous query definitions, we
            recommend that you name them. This way, you can find the ones you want by using the
            first part of the name as a filter in the <code>queryDefinitionNamePrefix</code> parameter
            of <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html">DescribeQueryDefinitions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLQueryDefinitionCmdlet.QueryDefinitionId">
            <summary>
            <para>
            <para>If you are updating a query definition, use this parameter to specify the ID of the
            query definition that you want to update. You can use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html">DescribeQueryDefinitions</a>
            to retrieve the IDs of your saved query definitions.</para><para>If you are creating a query definition, do not specify this parameter. CloudWatch
            generates a unique ID for the new query definition and include it in the response
            to this operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLQueryDefinitionCmdlet.QueryString">
            <summary>
            <para>
            <para>The query string to use for this definition. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html">CloudWatch
            Logs Insights Query Syntax</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLQueryDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'QueryDefinitionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutQueryDefinitionResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.PutQueryDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLQueryDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLQueryDefinitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLResourcePolicyCmdlet">
            <summary>
            Creates or updates a resource policy allowing other Amazon Web Services services to
            put log events to this account, such as Amazon Route 53. An account can have up to
            10 resource policies per Amazon Web Services Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLResourcePolicyCmdlet.PolicyDocument">
            <summary>
            <para>
            <para>Details of the new policy, including the identity of the principal that is enabled
            to put logs to this account. This is formatted as a JSON string. This parameter is
            required.</para><para>The following example creates a resource policy enabling the Route 53 service to put
            DNS query logs in to the specified log group. Replace <code>"logArn"</code> with the
            ARN of your CloudWatch Logs resource, such as a log group or log stream.</para><para>CloudWatch Logs also supports <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourcearn">aws:SourceArn</a>
            and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourceaccount">aws:SourceAccount</a>
            condition context keys.</para><para>In the example resource policy, you would replace the value of <code>SourceArn</code>
            with the resource making the call from RouteÂ 53 to CloudWatch Logs. You would also
            replace the value of <code>SourceAccount</code> with the Amazon Web Services account
            ID making that call.</para><para><code>{ "Version": "2012-10-17", "Statement": [ { "Sid": "Route53LogsToCloudWatchLogs",
            "Effect": "Allow", "Principal": { "Service": [ "route53.amazonaws.com" ] }, "Action":
            "logs:PutLogEvents", "Resource": "logArn", "Condition": { "ArnLike": { "aws:SourceArn":
            "myRoute53ResourceArn" }, "StringEquals": { "aws:SourceAccount": "myAwsAccountId"
            } } } ] }</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLResourcePolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>Name of the new policy. This parameter is required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourcePolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutResourcePolicyResponse).
            Specifying the name of a property of type Amazon.CloudWatchLogs.Model.PutResourcePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLResourcePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLResourcePolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLRetentionPolicyCmdlet">
            <summary>
            Sets the retention of the specified log group. With a retention policy, you can configure
            the number of days for which to retain log events in the specified log group.
            
             <note><para>
            CloudWatch Logs doesnâ€™t immediately delete log events when they reach their retention
            setting. It typically takes up to 72 hours after that before log events are deleted,
            but in rare situations might take longer.
            </para><para>
            To illustrate, imagine that you change a log group to have a longer retention setting
            when it contains log events that are past the expiration date, but havenâ€™t been deleted.
            Those log events will take up to 72 hours to be deleted after the new retention date
            is reached. To make sure that log data is deleted permanently, keep a log group at
            its lower retention setting until 72 hours after the previous retention period ends.
            Alternatively, wait to change the retention setting until you confirm that the earlier
            log events are deleted. 
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLRetentionPolicyCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLRetentionPolicyCmdlet.RetentionInDays">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLRetentionPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutRetentionPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLRetentionPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLRetentionPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet">
            <summary>
            Creates or updates a subscription filter and associates it with the specified log
            group. With subscription filters, you can subscribe to a real-time stream of log events
            ingested through <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html">PutLogEvents</a>
            and have them delivered to a specific destination. When log events are sent to the
            receiving service, they are Base64 encoded and compressed with the GZIP format.
            
             
            <para>
            The following destinations are supported for subscription filters:
            </para><ul><li><para>
            An Amazon Kinesis data stream belonging to the same account as the subscription filter,
            for same-account delivery.
            </para></li><li><para>
            A logical destination created with <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestination.html">PutDestination</a>
            that belongs to a different account, for cross-account delivery. We currently support
            Kinesis Data Streams and Kinesis Data Firehose as logical destinations.
            </para></li><li><para>
            An Amazon Kinesis Data Firehose delivery stream that belongs to the same account as
            the subscription filter, for same-account delivery.
            </para></li><li><para>
            An Lambda function that belongs to the same account as the subscription filter, for
            same-account delivery.
            </para></li></ul><para>
            Each log group can have up to two subscription filters associated with it. If you
            are updating an existing filter, you must specify the correct name in <code>filterName</code>.
            
            </para><para>
            To perform a <code>PutSubscriptionFilter</code> operation for any destination except
            a Lambda function, you must also have the <code>iam:PassRole</code> permission.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet.DestinationArn">
            <summary>
            <para>
            <para>The ARN of the destination to deliver matching log events to. Currently, the supported
            destinations are:</para><ul><li><para>An Amazon Kinesis stream belonging to the same account as the subscription filter,
            for same-account delivery.</para></li><li><para>A logical destination (specified using an ARN) belonging to a different account, for
            cross-account delivery.</para><para>If you're setting up a cross-account subscription, the destination must have an IAM
            policy associated with it. The IAM policy must allow the sender to send logs to the
            destination. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html">PutDestinationPolicy</a>.</para></li><li><para>A Kinesis Data Firehose delivery stream belonging to the same account as the subscription
            filter, for same-account delivery.</para></li><li><para>A Lambda function belonging to the same account as the subscription filter, for same-account
            delivery.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet.Distribution">
            <summary>
            <para>
            <para>The method used to distribute log data to the destination. By default, log data is
            grouped by log stream, but the grouping can be set to random for a more even distribution.
            This property is only applicable when the destination is an Amazon Kinesis data stream.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet.FilterName">
            <summary>
            <para>
            <para>A name for the subscription filter. If you are updating an existing filter, you must
            specify the correct name in <code>filterName</code>. To find the name of the filter
            currently associated with a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeSubscriptionFilters.html">DescribeSubscriptionFilters</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet.FilterPattern">
            <summary>
            <para>
            <para>A filter pattern for subscribing to a filtered stream of log events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet.LogGroupName">
            <summary>
            <para>
            <para>The name of the log group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet.RoleArn">
            <summary>
            <para>
            <para>The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested
            log events to the destination stream. You don't need to provide the ARN when you are
            working with a logical destination for cross-account delivery.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CloudWatchLogs.Model.PutSubscriptionFilterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LogGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LogGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CWL.WriteCWLSubscriptionFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
